const fs = require("fs");
const path = require("path");
const { execSync } = require("child_process");

try {
    // Get the current commit hash
    const commitHash = execSync("git rev-parse --short HEAD", { encoding: "utf8" }).trim();

    // Create the version file content
    const versionContent = `// This file is auto-generated by scripts/generate-version.ts
export const COMMIT_HASH = '${commitHash}';
`;

    // Ensure the lib directory exists
    const libDir = path.join(__dirname, "..", "lib");
    if (!fs.existsSync(libDir)) {
        fs.mkdirSync(libDir, { recursive: true });
    }

    // Write the version file
    const versionPath = path.join(libDir, "version.ts");
    fs.writeFileSync(versionPath, versionContent);

    console.log(`✅ Generated version.ts with commit hash: ${commitHash}`);
} catch (error) {
    console.warn("⚠️  Could not get git commit hash, using fallback");

    // Create fallback version file
    const fallbackContent = `// This file is auto-generated by scripts/generate-version.ts
export const COMMIT_HASH = 'development';
`;

    const libDir = path.join(__dirname, "..", "src", "lib");
    if (!fs.existsSync(libDir)) {
        fs.mkdirSync(libDir, { recursive: true });
    }

    const versionPath = path.join(libDir, "version.ts");
    fs.writeFileSync(versionPath, fallbackContent);

    console.log("✅ Generated version.ts with fallback value");
}
